class HeaderOptimizer{constructor(){this.isInitialized=!1,this.fallbackTexts={"main-title":"The Blacklist","confidential-stamp":"HIGHLY CONFIDENTIAL","admin-title":"Criminal List"},this.logger=window.logManager?window.logManager.createModuleLogger("HeaderOptimizer"):{error:console.error,warn:console.warn,info:console.log,debug:console.log,verbose:console.log},this.titleOverrides={home:"The Blacklist",list:"The Blacklist",listV1:"The Blacklist",listV2:"The Blacklist",stats:"Data Analytics",status:"Status",deceased:"Deceased",active:"Active",incarcerated:"Incarcerated",captured:"Captured",redacted:"Redacted",unknown:"Unknown","the-blacklist":"The Blacklist"},this.init()}init(){this.optimizeHeaderImmediately(),"loading"===document.readyState?document.addEventListener("DOMContentLoaded",()=>this.enhanceHeader()):this.enhanceHeader()}optimizeHeaderImmediately(){this.setFallbackTexts(),this.preloadCriticalResources()}setFallbackTexts(){Object.entries(this.fallbackTexts).forEach(([e,t])=>{const n=document.getElementById(e);n&&!n.textContent.trim()&&(n.textContent=t)});const e=document.querySelector(".confidential-stamp");e&&!e.textContent.trim()&&(e.textContent="HIGHLY CONFIDENTIAL")}preloadCriticalResources(){}enhanceHeader(){this.isInitialized||(this.isInitialized=!0,this.waitForStringSchema(()=>{this.updateHeaderTexts(),this.optimizeFontLoading(),this.trackHeaderPerformance()}))}waitForStringSchema(e,t=50){let n=0;const o=()=>{n++,window.StringSchema||window.AdminStringSchema?e():n<t?setTimeout(o,10):(this.logger.warn("StringSchema not available, using fallback texts"),e())};o()}updateHeaderTexts(){const e=document.getElementById("main-title");if(e){const t=this.detectPageType();let n=this.titleOverrides[t]||"The Blacklist";if(window.StringSchema){const e=window.StringSchema.getPageTitle(t);e&&"The Blacklist"!==e&&(n=e)}n!==e.textContent&&(e.textContent=n,this.logger.info(`[HeaderOptimizer] Updated main title to: ${n}`))}const t=document.getElementById("admin-title");if(t&&window.AdminStringSchema){const e=this.detectAdminPageType(),n=window.AdminStringSchema.getAdminTitle(e);n&&"Criminal List"!==n&&(t.textContent=n)}}detectPageType(){const e=window.location.pathname;return e.includes("/stats")?"stats":e.includes("/list/v2")?"listV2":e.includes("/list/")?"status":e.includes("/list")?"list":e.includes("/the-blacklist")?"the-blacklist":"list"}detectAdminPageType(){const e=window.location.pathname;return e.includes("/admin/items")?"items":(e.includes("/admin"),"dashboard")}optimizeFontLoading(){document.fonts&&document.fonts.ready.then(()=>{if(document.body.classList.add("fonts-loaded"),this.logger.info("[HeaderOptimizer] Fonts loaded successfully"),window.fontManager){const e=window.fontManager.getFontStatus();this.logger.info("[HeaderOptimizer] Font status:",e)}}).catch(e=>{this.logger.warn("[HeaderOptimizer] Font loading failed:",e),document.body.classList.add("fonts-fallback")})}trackHeaderPerformance(){if([document.getElementById("main-title"),document.getElementById("admin-title"),document.querySelector(".confidential-stamp")].filter(Boolean).length>0){const e=performance.now();this.logger.info(`[HeaderOptimizer] Header elements loaded in ${e.toFixed(2)}ms`),document.body.classList.add("header-loaded")}}updateHeader(){this.setFallbackTexts(),this.updateHeaderTexts()}setTitleOverride(e,t){this.titleOverrides[e]=t;if(this.detectPageType()===e){const e=document.getElementById("main-title");e&&(e.textContent=t,this.logger.info(`[HeaderOptimizer] Title override applied: ${t}`))}}getTitleOverride(e){return this.titleOverrides[e]}resetTitle(e){this.titleOverrides[e]={home:"The Blacklist",list:"The Blacklist",listV1:"The Blacklist",listV2:"The Blacklist",stats:"Data Analytics",status:"Status",deceased:"Deceased",active:"Active",incarcerated:"Incarcerated",captured:"Captured",redacted:"Redacted",unknown:"Unknown","the-blacklist":"The Blacklist"}[e]||"The Blacklist",this.updateHeaderTexts()}getMetrics(){return{isInitialized:this.isInitialized,fallbackTextsSet:Object.keys(this.fallbackTexts).every(e=>document.getElementById(e)?.textContent.trim()),fontsLoaded:document.body.classList.contains("fonts-loaded"),headerLoaded:document.body.classList.contains("header-loaded")}}}window.headerOptimizer=new HeaderOptimizer,"undefined"!=typeof module&&module.exports&&(module.exports=HeaderOptimizer);class FontManager{constructor(){this.fontUrls={"Blacklisted.woff2":null,"Blacklisted.woff":null,"OCR A Std Regular.ttf":null},this.fontsPath="/shared/assets/fonts/",this.logger=window.logManager?window.logManager.createModuleLogger("FontManager"):{error:console.error,warn:console.warn,info:console.log,debug:console.log,verbose:console.log},this.init()}init(){this.suppressFontWarnings(),"loading"===document.readyState?document.addEventListener("DOMContentLoaded",()=>this.checkFonts()):this.checkFonts()}suppressFontWarnings(){const e=console.warn;console.warn=function(t){"string"==typeof t&&(t.includes("maxp: Bad maxZones")||t.includes("downloadable font")||t.includes("font-family"))||e.apply(console,arguments)}}async checkFonts(){this.logger.info("[FontManager] Checking font availability...");for(const[e,t]of Object.entries(this.fontUrls))try{const n=this.fontsPath+e;await this.testFontUrl(n)?this.logger.info(`[FontManager] Local font ${e} is available`):t?(this.logger.warn(`[FontManager] Local font ${e} not available, downloading from CDN...`),await this.downloadFont(e,t)):this.logger.warn(`[FontManager] Local font ${e} not available (no CDN fallback)`)}catch(t){this.logger.error(`[FontManager] Error checking font ${e}:`,t)}this.forceFontLoading()}async testFontUrl(e){try{return(await fetch(e,{method:"HEAD",cache:"no-cache"})).ok}catch(e){return!1}}async downloadFont(e,t){try{this.logger.info(`[FontManager] Downloading ${e} from CDN...`);const n=await fetch(t);if(!n.ok)throw new Error(`Failed to download font: ${n.status}`);const o=await n.arrayBuffer(),a=new Blob([o],{type:"font/ttf"}),i=URL.createObjectURL(a);this.updateFontCSS(e,i),this.logger.info(`[FontManager] Successfully downloaded and cached ${e}`),this.storeFontInCache(e,o)}catch(n){this.logger.error(`[FontManager] Failed to download ${e}:`,n),this.updateFontCSS(e,t)}}updateFontCSS(e,t){const n=e.includes("OCR")?"TBL-2":"TBL",o=document.createElement("style");o.textContent=`\n      @font-face {\n        font-family: '${n}-Downloaded';\n        src: url('${t}') format('truetype');\n        font-display: swap;\n        font-weight: normal;\n        font-style: normal;\n      }\n      \n      .main-header h1,\n      .main-header .confidential-stamp {\n        font-family: '${n}-Downloaded', '${n}', 'TBL-Fallback', Arial, Helvetica, sans-serif !important;\n      }\n    `,document.head.appendChild(o),document.fonts&&document.fonts.load(`16px ${n}-Downloaded`).then(()=>{this.logger.info(`[FontManager] Font ${n}-Downloaded loaded successfully`),document.body.classList.add("fonts-loaded")}).catch(e=>{this.logger.warn("[FontManager] Font loading failed:",e),document.body.classList.add("fonts-fallback")})}storeFontInCache(e,t){try{const n=btoa(String.fromCharCode(...new Uint8Array(t)));localStorage.setItem(`font_${e}`,n),localStorage.setItem(`font_${e}_timestamp`,Date.now().toString()),this.logger.info(`[FontManager] Cached ${e} in localStorage`)}catch(e){this.logger.warn("[FontManager] Failed to cache font:",e)}}loadFontFromCache(e){try{const t=localStorage.getItem(`font_${e}`),n=localStorage.getItem(`font_${e}_timestamp`);if(t&&n){const o=Date.now()-parseInt(n);if(o<6048e5){const n=Uint8Array.from(atob(t),e=>e.charCodeAt(0)),o=new Blob([n],{type:"font/ttf"}),a=URL.createObjectURL(o);return this.logger.info(`[FontManager] Loaded ${e} from cache`),a}localStorage.removeItem(`font_${e}`),localStorage.removeItem(`font_${e}_timestamp`)}}catch(e){this.logger.warn("[FontManager] Failed to load font from cache:",e)}return null}async refreshFonts(){this.logger.info("[FontManager] Refreshing fonts..."),await this.checkFonts()}forceFontLoading(){this.logger.info("[FontManager] Forcing font loading...");["Blacklisted","TBL-2"].forEach(e=>{const t=document.createElement("div");t.style.cssText=`\n        position: absolute;\n        left: -9999px;\n        top: -9999px;\n        font-family: '${e}', Arial, sans-serif;\n        font-size: 16px;\n        visibility: hidden;\n      `,t.textContent="THE BLACKLIST",document.body.appendChild(t),setTimeout(()=>{t.parentNode&&t.parentNode.removeChild(t)},1e3)}),document.body.classList.add("fonts-loading"),setTimeout(()=>{this.checkFontLoadingStatus()},2e3)}checkFontLoadingStatus(){const e=document.fonts.check("16px Blacklisted"),t=document.fonts.check("16px TBL-2");this.logger.info(`[FontManager] Font loading status - Blacklisted: ${e}, TBL-2: ${t}`),e||t?(document.body.classList.remove("fonts-loading"),document.body.classList.add("fonts-loaded"),this.logger.info("[FontManager] Fonts loaded successfully")):(document.body.classList.remove("fonts-loading"),document.body.classList.add("fonts-fallback"),this.logger.warn("[FontManager] Using fallback fonts"))}getFontStatus(){return{fontsLoaded:document.body.classList.contains("fonts-loaded"),fontsFallback:document.body.classList.contains("fonts-fallback"),availableFonts:Array.from(document.fonts).map(e=>e.family)}}}window.fontManager=new FontManager,"undefined"!=typeof module&&module.exports&&(module.exports=FontManager);class PerformanceMonitor{constructor(){this.metrics={startTime:performance.now(),headerLoadTime:null,fontLoadTime:null,domContentLoaded:null,pageLoad:null,firstPaint:null,firstContentfulPaint:null},this.logger=window.logManager?window.logManager.createModuleLogger("PerformanceMonitor"):{error:console.error,warn:console.warn,info:console.log,debug:console.log,verbose:console.log},this.init()}init(){document.addEventListener("DOMContentLoaded",()=>{this.metrics.domContentLoaded=performance.now()-this.metrics.startTime,this.trackHeaderLoading()}),window.addEventListener("load",()=>{this.metrics.pageLoad=performance.now()-this.metrics.startTime,this.trackFontLoading(),this.trackPaintMetrics(),this.logMetrics()}),document.fonts&&document.fonts.ready.then(()=>{this.metrics.fontLoadTime=performance.now()-this.metrics.startTime})}trackHeaderLoading(){const e=performance.now(),t=document.getElementById("main-title"),n=document.querySelector(".confidential-stamp");if(t&&n&&(this.metrics.headerLoadTime=performance.now()-e,window.StringSchema)){const t=performance.now()-e;this.logger.info(`[Performance] StringSchema loaded in ${t.toFixed(2)}ms`)}}trackFontLoading(){if(document.fonts){const e=Array.from(document.fonts).filter(e=>e.family.includes("TBL")||e.family.includes("TBL-2"));this.logger.info(`[Performance] Custom fonts loaded: ${e.length}`),e.forEach(e=>{this.logger.info(`[Performance] Font loaded: ${e.family}`)})}}trackPaintMetrics(){performance.getEntriesByType("paint").forEach(e=>{"first-paint"===e.name?this.metrics.firstPaint=e.startTime:"first-contentful-paint"===e.name&&(this.metrics.firstContentfulPaint=e.startTime)})}logMetrics(){this.logger.info("🚀 Performance Metrics - The Blacklist"),this.logger.info(`📊 Total Load Time: ${this.metrics.pageLoad?.toFixed(2)||"N/A"}ms`),this.logger.info(`📄 DOM Content Loaded: ${this.metrics.domContentLoaded?.toFixed(2)||"N/A"}ms`),this.logger.info(`🎨 First Paint: ${this.metrics.firstPaint?.toFixed(2)||"N/A"}ms`),this.logger.info(`✨ First Contentful Paint: ${this.metrics.firstContentfulPaint?.toFixed(2)||"N/A"}ms`),this.logger.info(`🔤 Font Load Time: ${this.metrics.fontLoadTime?.toFixed(2)||"N/A"}ms`),this.logger.info(`📋 Header Load Time: ${this.metrics.headerLoadTime?.toFixed(2)||"N/A"}ms`),this.generateRecommendations(),this.logger.info()}generateRecommendations(){const e=[];this.metrics.pageLoad>3e3&&e.push("⚠️ High load time detected. Consider optimizing assets."),this.metrics.fontLoadTime>1e3&&e.push("⚠️ Slow font loading. Consider using font-display: swap."),this.metrics.headerLoadTime>100&&e.push("⚠️ Header loading delay. Check for JavaScript dependencies."),this.metrics.firstContentfulPaint>2e3&&e.push("⚠️ Slow First Contentful Paint. Optimize critical rendering path."),0===e.length&&e.push("✅ Good performance metrics detected."),this.logger.info("💡 Recommendations:"),e.forEach(e=>this.logger.info(`   ${e}`))}getMetrics(){return{...this.metrics}}measureOperation(e,t){const n=performance.now(),o=t(),a=performance.now();return this.logger.info(`[Performance] ${e}: ${(a-n).toFixed(2)}ms`),o}}window.performanceMonitor=new PerformanceMonitor,"undefined"!=typeof module&&module.exports&&(module.exports=PerformanceMonitor),document.addEventListener("DOMContentLoaded",()=>{const e=window.logManager?window.logManager.createModuleLogger("Index"):{error:console.error,warn:console.warn,info:console.log,debug:console.log,verbose:console.log};let t;htmx.on("htmx:sendAbort",t=>{e.debug("Request aborted (expected when requests are blocked)")}),htmx.on("htmx:responseError",t=>{0!==t.detail.xhr.status?e.error("Response error:",t.detail.xhr.status,t.detail.xhr.statusText):e.debug("Network error (expected when requests are blocked)")}),htmx.on("htmx:afterRequest",t=>{if("dataList"===t.detail.elt.id){const n=document.getElementById("dataList");try{if(!t.detail.xhr.response||""===t.detail.xhr.response.trim())return void(0!==t.detail.xhr.status&&e.warn("Empty response received, skipping JSON parsing"));const o=JSON.parse(t.detail.xhr.response),a=window.location.pathname.includes("/v2");let i;i=Array.isArray(o)&&o.length>0&&Array.isArray(o[0])?o.flat():o;const s=i.sort((e,t)=>a?(e.v2||0)-(t.v2||0):(e.v1||0)-(t.v1||0));window.ItemRenderer&&window.ItemRenderer.renderItem?e.debug("ItemRenderer is available, using unified renderer"):e.warn("ItemRenderer not available, using fallback rendering");const r=[{min:0,max:50,label:"0-50"},{min:51,max:100,label:"51-100"},{min:101,max:150,label:"101-150"},{min:151,max:200,label:"151-200"}].map(e=>({range:e,items:[]}));s.forEach(e=>{const t=a?e.v2||0:e.v1||0;for(let n=0;n<r.length;n++){const o=r[n];if(t>=o.range.min&&t<=o.range.max){o.items.push(e);break}}});const d=r.map(e=>`<div class="column">${e.items.map(e=>{if(window.ItemRenderer&&window.ItemRenderer.renderItem)return window.ItemRenderer.renderItem(e,{showV1:!a,showV2:a,useV2ForNumber:a,includeLegendWrapper:!0});{const t=a?e.v2||0:e.v1||0,n=e.status||"unknown",o=e.name||"Unknown";return"redacted"===n?`<div class="${n}"><div class="list-item"><span class="guide">#${t}.</span><span class="item-redacted"></span></div></div>`:`<div class="${n}"><div class="list-item"><span class="guide">#${t}.</span><span><span class="name">${o}</span><span class="dash">&ndash;</span><span class="status ${n}">${n}</span></span></div></div>`}}).join("")}</div>`).join("");n.innerHTML=d}catch(o){e.error("Error parsing JSON response:",o),e.debug("Response content:",t.detail.xhr.response),e.debug("Response status:",t.detail.xhr.status),n&&(n.innerHTML='<div class="error-message">Failed to load data. Please try again.</div>')}}}),window.addEventListener("resize",()=>{clearTimeout(t),t=setTimeout(()=>{const e=document.getElementById("dataList");e&&e.innerHTML&&htmx.trigger(e,"htmx:trigger")},250)}),window.renderListData=function(t,n){const o=document.getElementById(n);if(o)try{let a;a=Array.isArray(t)&&t.length>0&&Array.isArray(t[0])?t.flat():t;const i=window.location.pathname.includes("/v2"),s=a.sort((e,t)=>i?(e.v2||0)-(t.v2||0):(e.v1||0)-(t.v1||0));if(window.ItemRenderer&&window.ItemRenderer.renderItem){e.info("Using ItemRenderer for demo data");const t=s.map(e=>window.ItemRenderer.renderItem(e)).join("");o.innerHTML=t}else{e.warn("ItemRenderer not available, using basic rendering");const t=s.map(e=>`<div class="list-item ${e.status||"unknown"}">\n                        <div class="item-header">\n                            <span class="item-name">${e.name||"Unknown"}</span>\n                            <span class="item-dash">-</span>\n                            <span class="item-status">#${i?e.v2||0:e.v1||0}</span>\n                        </div>\n                    </div>`).join("");o.innerHTML=t}e.info(`Rendered ${s.length} demo items for ${n}`)}catch(t){e.error("Error rendering demo list data:",t),o.innerHTML='<div class="error-message">Error loading demo data</div>'}else e.error(`Container ${n} not found`)}});