<% 
// Chart configuration for dynamic rendering
const chartConfig = {
  pie: {
    id: 'pieChart',
    title: 'Category Distribution',
    controlsId: 'pieChartControls',
    legendId: 'pieChartLegend',
    canvasId: 'pieChart',
    hasFilters: false
  },
  bar: {
    id: 'barChart', 
    title: 'Status Distribution',
    controlsId: 'barChartControls',
    legendId: 'barChartLegend',
    canvasId: 'barChart',
    hasFilters: false
  },
  scatter: {
    id: 'scatterChart',
    title: 'V1 vs V2 Comparison', 
    controlsId: 'scatterChartControls',
    legendId: 'scatterChartLegend',
    canvasId: 'scatterChart',
    hasFilters: true,
    filters: {
      dataSource: [
        { value: 'all', label: 'All Data' },
        { value: 'v1', label: 'V1 Only' },
        { value: 'v2', label: 'V2 Only' }
      ],
      status: [
        { value: 'all', label: 'All Statuses' },
        { value: 'deceased', label: 'Deceased' },
        { value: 'active', label: 'Active' },
        { value: 'incarcerated', label: 'Incarcerated' },
        { value: 'redacted', label: 'Redacted' },
        { value: 'unknown', label: 'Unknown' },
        { value: 'captured', label: 'Captured' }
      ]
    }
  }
};
%>
<%- include('../partials/head', { 
  includeChartJS: true,
  includePerformanceMonitor: true,
  includeDemoManager: true,
  includeItemRenderer: true,
  includeChartsCSS: true,
  preloadFonts: false,
  includeStructuredData: true,
  pageUrl: 'https://tblx.vercel.app/stats',
  itemCount: 'Loading...'
}) %>
<body class="stats-page">
  <%- include('../partials/header') %>
  
  <!-- Demo Banner -->
  <%- include('../partials/demo-banner') %>
  
  <!-- Reusable List Components -->
  <%- include('../partials/list-components', {
    activeTab: 'stats',
    descriptions: {
      'stats': 'V1 Data Analytics & Charts'
    },
    hideToggleButtons: false
  }) %>

  <main class="main-content">
    <div class="container">
      <!-- Stats Cards with HTMX Loading (Hybrid Approach) -->
      <div id="statsCards" 
           class="stats-cards"
           style="position: relative; min-height: 200px;"
           hx-get="/stats/cards"
           hx-trigger="load"
           hx-swap="none"
           hx-indicator="#statsCardsSpinner">
        
         <!-- Simple loading spinner -->
         <%- include('../partials/reusable-spinner', { 
           id: 'statsCardsSpinner', 
           text: 'Loading statistics...',
           size: 'medium',
           color: 'red'
         }) %>
        
        <!-- Stats cards will be loaded here -->
        <div class="stats-cards-container">
          <div class="status-cards-grid">
            <!-- Cards will be populated by HTMX -->
          </div>
        </div>
      </div>

      <!-- Charts Section -->
      <div class="charts-section">
        <!-- Charts Grid -->
        <div class="charts-grid">
          <% Object.keys(chartConfig).forEach(function(chartType) { 
            const chart = chartConfig[chartType];
          %>
          <!-- <%= chart.title %> Chart -->
        <div class="chart-container">
            <div class="chart-header">
              <h3><%= chart.title %></h3>
              <div class="chart-controls" id="<%= chart.controlsId %>">
                <!-- Buttons will be dynamically generated -->
          </div>
            </div>
            
            <% if (chart.hasFilters) { %>
            <!-- Chart Filters -->
            <div class="chart-filters">
              <% Object.keys(chart.filters).forEach(function(filterType) { 
                const filter = chart.filters[filterType];
                const filterId = filterType === 'dataSource' ? 'dataFilter' : 'statusFilter';
                const filterLabel = filterType === 'dataSource' ? 'Data Source:' : 'Status:';
              %>
              <div class="filter-group">
                <label hidden for="<%= filterId %>"><%= filterLabel %></label>
                <select id="<%= filterId %>" class="filter-select">
                  <% filter.forEach(function(option) { %>
                  <option value="<%= option.value %>"><%= option.label %></option>
                  <% }); %>
              </select>
              </div>
              <% }); %>
            </div>
            <% } %>
            
          <div class="chart-wrapper" 
               id="<%= chart.canvasId %>Wrapper"
               hx-get="/stats/chart/<%= chartType %>"
               hx-trigger="load, refresh-<%= chart.canvasId %> from:body"
               hx-swap="none"
               hx-indicator="#<%= chart.canvasId %>Spinner">
              
              <!-- Chart Loading Spinner -->
              <%- include('../partials/reusable-spinner', { 
                id: chart.canvasId + 'Spinner', 
                text: 'Loading ' + chart.title.toLowerCase() + '...',
                size: 'medium',
                color: 'red'
              }) %>
              
              <canvas id="<%= chart.canvasId %>" width="400" height="300"></canvas>
            </div>
            
            <!-- Chart Legend -->
            <div id="<%= chart.legendId %>" class="chart-legend"></div>
          </div>
          <% }); %>
        </div>
      </div>
  </main>

  <!-- Chart Modal -->
  <div id="chartModal" class="chart-modal">
    <div class="chart-modal-content">
      <div class="chart-modal-header">
        <h2 id="modalChartTitle">Chart</h2>
        <button class="chart-modal-close" onclick="window.statsPageCharts.closeModal()">&times;</button>
      </div>
      <div class="chart-modal-body">
        <div id="modalChartContainer">
          <!-- Chart will be rendered here -->
        </div>
      </div>
    </div>
  </div>

  <!-- Chart.js (UMD version for browser compatibility) -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js@4.3.0/dist/chart.umd.js"></script>
  
  <!-- Chart Button Icons -->
  <script src="/shared/assets/js/chart-button-icons.js"></script>
  
  <!-- Chart Buttons Manager -->
  <script src="/assets/js/charts/chart-buttons-manager.js"></script>
  
  <!-- Chart.js Zoom Plugin (UMD version) -->
  <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-zoom@2.0.1/dist/chartjs-plugin-zoom.min.js"></script>
  <script>
    // Fallback for Chart.js zoom plugin if CDN fails
    if (typeof ChartZoom === 'undefined') {
      console.warn('Chart.js zoom plugin failed to load from CDN, loading fallback...');
      const script = document.createElement('script');
      script.src = 'https://unpkg.com/chartjs-plugin-zoom@2.0.1/dist/chartjs-plugin-zoom.min.js';
      document.head.appendChild(script);
    }
    
    // Register zoom plugin with Chart.js and initialize managers
    document.addEventListener('DOMContentLoaded', function() {
      // Initialize Chart.js zoom plugin
      if (typeof Chart !== 'undefined' && typeof ChartZoom !== 'undefined') {
        Chart.register(ChartZoom);
        console.log('Chart.js zoom plugin registered successfully');
      } else {
        console.warn('Chart.js or zoom plugin not available for registration');
      }
      
      // Charts will load automatically via HTMX
      // The StatsPageChartsManager will initialize itself via its own DOMContentLoaded listener
      console.log('Stats Layout: DOMContentLoaded fired');
      console.log('Stats Layout: window.statsPageCharts available:', !!window.statsPageCharts);
    });
  </script>

  <!-- Shared Chart Utilities -->
  <% if (process.env.NODE_ENV === 'production') { %>
  <!-- Production: Use bundled chart JavaScript -->
  <script src="/assets/build/charts.min.js?v=<%= Date.now() %>"></script>
  <% } else { %>
  <!-- Development: Use individual chart JavaScript files -->
  <script src="/shared/assets/js/chart-config.js?v=<%= Date.now() %>"></script>
  <script src="/shared/assets/js/chart-utils.js?v=<%= Date.now() %>"></script>
  <script src="/shared/assets/js/chart-colors.js?v=<%= Date.now() %>"></script>
  
  <!-- Shared Chart Classes -->
  <script src="/shared/assets/js/charts/base-chart.js?v=<%= Date.now() %>"></script>
  <!-- Chart Classes -->
  <script src="/shared/assets/js/charts/pie-chart.js?v=<%= Date.now() %>"></script>
  <script src="/shared/assets/js/charts/bar-chart.js?v=<%= Date.now() %>"></script>
  <script src="/shared/assets/js/charts/scatter-chart.js?v=<%= Date.now() %>"></script>
  
  <!-- Stats Page Charts Manager -->
  <script src="/assets/js/charts/stats-page-charts-manager.js?v=<%= Date.now() %>"></script>
  <% } %>

  <!-- Enhanced Common Scripts -->
  <%- include('../partials/enhanced-common-scripts') %>
  
  <!-- Stats-Specific Scripts -->
  <%- include('../partials/stats-specific-scripts') %>

</body>
</html>
